---
- name: Install Java
  hosts: all
  tasks:
    - name: Set facts for Java 11 vars
      ansible.builtin.set_fact:
        java_home: "/opt/jdk/{{ java_jdk_version }}"
      tags: java
    - name: Upload .tar.gz file containing binaries from local storage
      ansible.builtin.copy:
        src: "{{ java_oracle_jdk_package }}"
        dest: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
        mode: 0644
      register: download_java_binaries
      until: download_java_binaries is succeeded
      tags: java
    - name: Ensure installation dir exists
      become: true
      ansible.builtin.file:
        state: directory
        path: "{{ java_home }}"
        mode: 0755
      tags: java
    - name: Extract java in the installation directory
      become: true
      ansible.builtin.unarchive:
        copy: false
        src: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
        dest: "{{ java_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ java_home }}/bin/java"
      tags: java
    - name: Export environment variables
      become: true
      ansible.builtin.template:
        src: jdk.sh.j2
        dest: /etc/profile.d/jdk.sh
        mode: 0755
      tags: java
- name: Install Elasticsearch
  hosts: elasticsearch
  tasks:
    - name: Elastic server IP address
      ansible.builtin.command:
        cmd: hostname -i
      register: elastic_ip
      tags: elastic
    - name: Ensure group 'elastic' exists
      ansible.builtin.group:
        name: elastic
        state: present
      tags: elastic
    - name: Add the user 'elastic' with a bash shell, appending the group 'elastic' to the user's groups
      ansible.builtin.user:
        name: elastic
        shell: /bin/bash
        groups: elastic
        append: yes
      tags: elastic
    - name: Upload tar.gz Elasticsearch from remote URL
      ansible.builtin.get_url:
        url: "http://192.168.10.164/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        dest: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        mode: 0644
        timeout: 60
        force: true
        validate_certs: false
      register: get_elastic
      until: get_elastic is succeeded
      tags: elastic
    - name: Create directrory for Elasticsearch
      ansible.builtin.file:
        state: directory
        owner: elastic
        group: elastic
        path: "{{ elastic_home }}"
        mode: 0755
      tags: elastic
    - name: Extract Elasticsearch in the installation directory
      become: true
      become_user: elastic
      ansible.builtin.unarchive:
        copy: false
        src: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        dest: "{{ elastic_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ elastic_home }}/bin/elasticsearch"
      tags: elastic
    - name: Set environment Elastic
      become: true
      ansible.builtin.template:
        src: templates/elk.sh.j2
        dest: /etc/profile.d/elk.sh
        mode: 0755
      tags: elastic
    - name: Update elastic config host IP
      become: true
      become_user: elastic
      ansible.builtin.lineinfile:
        path: "{{ elastic_home }}/config/elasticsearch.yml"
        regexp: '^#network.host: 192.168.0.1'
        line: 'network.host: 0.0.0.0'
      tags: elastic
- name: Install Kibana
  hosts: kibana
  tasks:
    - name: Ensure group 'kibana' exists
      ansible.builtin.group:
        name: kibana
        state: present
    - name: Add the user 'kibana' with a bash shell, appending the group 'kibana' to the user's groups
      ansible.builtin.user:
        name: kibana
        shell: /bin/bash
        groups: kibana
        append: yes
    - name: Upload tar.gz kibana from remote URL
      ansible.builtin.get_url:
        url: "http://192.168.10.164/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
        dest: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_kibana
      until: get_kibana is succeeded
      tags: kibana
    - name: Create directrory for kibana
      ansible.builtin.file:
        state: directory
        owner: kibana
        group: kibana
        path: "{{ kibana_home }}"
        mode: 0755
      tags: kibana
    - name: Extract kibana in the installation directory
      become: true
      become_user: kibana
      ansible.builtin.unarchive:
        copy: false
        src: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
        dest: "{{ kibana_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ kibana_home }}/bin/kibana"
      tags: kibana
    - name: Update kibana config host IP
      become: true
      become_user: kibana
      ansible.builtin.lineinfile:
        path: "{{ kibana_home }}/config/kibana.yml"
        regexp: '^#server.host'
        line: 'server.host: 0.0.0.0'
      tags: kibana
    - name: Set environment kibana
      become: true
      ansible.builtin.template:
        src: templates/kibana.sh.j2
        dest: /etc/profile.d/kibana.sh
        mode: 0755
      tags: kibana
    - name: Update kibana config elasticserver IP
      become: true
      become_user: kibana
      ansible.builtin.lineinfile:
        path: "{{ kibana_home }}/config/kibana.yml"
        regexp: '^#elasticsearch.hosts: \["http://localhost:9200"\]'
        line: 'elasticsearch.hosts: ["http://{{ elastic_ip }}:9200"]'
      tags: kibana
